{"version":3,"sources":["TextCode.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","margin","spacing","display","flexDirection","alignItems","text","code","TextCode","_useState","useState","_useState2","_slicedToArray","setText","handleTextChange","useCallback","evt","target","value","trim","classes","React","createElement","className","TextField","label","onChange","style","opacity","QRCode","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAQMA,EAAYC,YAAW,SAACC,GAAK,MAAM,CACvCC,KAAM,CACJC,OAAQF,EAAMG,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,KAAM,CACJL,OAAQF,EAAMG,QAAQ,IAExBK,KAAM,CACJN,OAAQF,EAAMG,QAAQ,OAsBXM,MAlBf,WAAoB,IAAAC,EACMC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BH,EAAIK,EAAA,GAAEE,EAAOF,EAAA,GAEdG,EAAmBC,sBAAY,SAACC,GAAG,OAAKH,EAAQG,EAAIC,OAAOC,QAAQ,CAACL,IAEpEN,EAAOD,EAAKa,OAEZC,EAAUvB,IAChB,OACEwB,IAAAC,cAAA,OAAKC,UAAWH,EAAQpB,MACtBqB,IAAAC,cAACE,IAAS,CAACD,UAAWH,EAAQd,KAAMmB,MAAM,OAAOP,MAAOZ,EAAMoB,SAAUZ,IACxEO,IAAAC,cAAA,OAAKC,UAAWH,EAAQb,KAAMoB,MAAO,CAACC,QAAUtB,EAAQ,EAAI,KAC1De,IAAAC,cAACO,IAAM,CAACX,MAAOX,OCxBRuB,MARf,WACE,OACET,IAAAC,cAAA,WACED,IAAAC,cAACd,EAAQ,QCQAuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCHdY,IAASC,OACPxB,IAAAC,cAACD,IAAMyB,WAAU,KACfzB,IAAAC,cAACQ,EAAG,OAENiB,SAASC,eAAe,SAM1BjB","file":"static/js/main.34a4e2b8.chunk.js","sourcesContent":["import React, {useState, useCallback} from 'react';\n\nimport QRCode from \"react-qr-code\";\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  text: {\n    margin: theme.spacing(1),\n  },\n  code: {\n    margin: theme.spacing(5),\n  },\n}));\n\nfunction TextCode() {\n  const [text, setText] = useState(\"\");\n\n  const handleTextChange = useCallback((evt) => setText(evt.target.value), [setText]);\n\n  const code = text.trim();\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <TextField className={classes.text} label=\"Text\" value={text} onChange={handleTextChange} />\n      <div className={classes.code} style={{opacity: (text) ? 1 : 0.1}}>\n        <QRCode value={code} />\n      </div>\n    </div>\n  );\n}\n\nexport default TextCode;\n","import React from 'react';\nimport TextCode from './TextCode';\n\nfunction App() {\n  return (\n    <div>\n      <TextCode />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}